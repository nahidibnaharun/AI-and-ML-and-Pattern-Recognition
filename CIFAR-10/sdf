sdfdef show_correct_incorrect(model, dataset, n=6):
    model.eval()
    correct, wrong = [], []
    
    with torch.no_grad():
        for i in range(len(dataset)):
            img, label = dataset[i]
            img_input = img.unsqueeze(0).to(device)
            output = model(img_input)
            pred = output.argmax(1).item()
            if pred == label:
                if len(correct) < n:
                    correct.append((img, label, pred))
            else:
                if len(wrong) < n:
                    wrong.append((img, label, pred))
            if len(correct) >= n and len(wrong) >= n:
                break

    # Plot
    fig, axes = plt.subplots(2, n, figsize=(15,5))
    for i, (img, label, pred) in enumerate(correct):
        axes[0,i].imshow(np.transpose(img.numpy(), (1,2,0)))
        axes[0,i].set_title(f"✅ True:{dataset.classes[label]}\nPred:{dataset.classes[pred]}")
        axes[0,i].axis("off")
    for i, (img, label, pred) in enumerate(wrong):
        axes[1,i].imshow(np.transpose(img.numpy(), (1,2,0)))
        axes[1,i].set_title(f"❌ True:{dataset.classes[label]}\nPred:{dataset.classes[pred]}")
        axes[1,i].axis("off")

    plt.show()

# Example usage
show_correct_incorrect(model, test_dataset, n=6)
